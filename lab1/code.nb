(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    213616,       4074]
NotebookOptionsPosition[    211411,       4032]
NotebookOutlinePosition[    211781,       4048]
CellTagsIndexPosition[    211738,       4045]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{"Cos", "[", 
      RowBox[{"4", "t"}], "]"}], "]"}], " ", "+", " ", 
    RowBox[{"Sin", "[", "t", "]"}]}]}], " ", "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "7"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"h", "=", 
   RowBox[{"-", "\[Pi]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"T", "=", 
    RowBox[{"4", " ", "\[Pi]"}]}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "[", "i_", "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", "/", "T"}], ")"}], " ", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", "t", "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", " ", "Pi", " ", "i", " ", "t"}], ")"}], "/", "T"}], 
        "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "h", ",", 
        RowBox[{"h", "+", "T"}]}], "}"}]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"B", "[", "i_", "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "/", "T"}], ")"}], " ", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", "t", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", " ", "Pi", " ", "i", " ", "t"}], ")"}], "/", "T"}], 
         "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "h", ",", 
         RowBox[{"h", "+", "T"}]}], "}"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Cc", "[", "i_", "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "T"}], ")"}], " ", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", "t", "]"}], " ", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "I"}], " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", " ", "Pi", " ", "i", " ", "t"}], ")"}], "/", "T"}]}],
          "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "h", ",", 
         RowBox[{"h", "+", "T"}]}], "}"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"rad", "=", 
   RowBox[{
    RowBox[{"A", "[", "0", "]"}], "/", "2"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", "n"}], ",", 
    RowBox[{"i", "++"}], ",", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"\"\<A[\>\"", ",", "i", ",", "\"\<] = \>\"", ",", 
       RowBox[{"A", "[", "i", "]"}], ",", "\"\<  B[\>\"", ",", "i", ",", 
       "\"\<] = \>\"", ",", 
       RowBox[{"B", "[", "i", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"rad", "=", 
      RowBox[{"rad", "+", 
       RowBox[{
        RowBox[{"A", "[", "i", "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", " ", "Pi", " ", "i", " ", "t"}], ")"}], "/", "T"}], 
         "]"}]}], "+", 
       RowBox[{
        RowBox[{"B", "[", "i", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", " ", "Pi", " ", "i", " ", "t"}], ")"}], "/", "T"}], 
         "]"}]}]}]}], ";"}]}], "]"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", 
     RowBox[{"-", "n"}]}], ",", 
    RowBox[{"i", "\[LessEqual]", "n"}], ",", 
    RowBox[{"i", "++"}], ",", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Cc[\>\"", ",", "i", ",", "\"\<] = \>\"", ",", 
       RowBox[{"Re", "[", 
        RowBox[{"Cc", "[", "i", "]"}], "]"}], ",", "\"\< + I * \>\"", ",", 
       RowBox[{"Im", "[", 
        RowBox[{"Cc", "[", "i", "]"}], "]"}]}], "]"}], ";"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"radComplex", "=", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Re", "[", 
         RowBox[{"Cc", "[", "i", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", " ", "Pi", " ", "i", " ", "t"}], ")"}], "/", "T"}], 
         "]"}]}], "-", 
       RowBox[{
        RowBox[{"Im", "[", 
         RowBox[{"Cc", "[", "i", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", " ", "Pi", " ", "i", " ", "t"}], ")"}], "/", "T"}], 
         "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"-", "n"}], ",", "n"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"rad", ",", "radComplex", ",", 
      RowBox[{"f", "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "h", ",", 
      RowBox[{"h", "+", "T"}]}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Blue"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Dashed", ",", "Red"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Green"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<t\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\:0420\:0435\:0430\:043b\:044c\:043d\:044b\:0439 \
\:0440\:044f\:0434 \:0424\:0443\:0440\:044c\:0435\>\"", ",", 
       "\"\<\:041a\:043e\:043c\:043f\:043b\:0435\:043a\:0441\:043d\:044b\:0439\
 \:0440\:044f\:0434 \:0424\:0443\:0440\:044c\:0435\>\"", ",", 
       "\"\<\:0418\:0441\:0445\:043e\:0434\:043d\:0430\:044f \:0444\:0443\
\:043d\:043a\:0446\:0438\:044f\>\""}], "}"}]}]}], "]"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", "rad", "]"}], "\n", 
 RowBox[{
  RowBox[{"N", "[", "radComplex", "]"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "h", ",", 
     RowBox[{"h", "+", "T"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Thick", ",", "Blue"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<t\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{
    "{", "\"\<\:0418\:0441\:0445\:043e\:0434\:043d\:0430\:044f \:0444\:0443\
\:043d\:043a\:0446\:0438\:044f\>\"", "}"}]}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.948813848263096*^9, 3.948813860158555*^9}, {
   3.948813915059627*^9, 3.948813922933219*^9}, {3.94881401658633*^9, 
   3.948814050873802*^9}, {3.948814181491226*^9, 3.9488142361652193`*^9}, {
   3.948814318088295*^9, 3.948814318245153*^9}, {3.9489759877196207`*^9, 
   3.948976031222267*^9}, {3.948976592656426*^9, 3.948976640919115*^9}, {
   3.948976696647653*^9, 3.94897670722755*^9}, {3.949025667287408*^9, 
   3.949025686266287*^9}, {3.9491306826174393`*^9, 3.949130720631365*^9}, {
   3.949130803169662*^9, 3.949130818520944*^9}, {3.9491308583274*^9, 
   3.949130875953884*^9}, 3.949130935259529*^9, {3.949131000437722*^9, 
   3.949131069028533*^9}, {3.949131119735694*^9, 3.9491311297004232`*^9}, 
   3.94913124447998*^9, {3.9491313035729647`*^9, 3.949131425025176*^9}, {
   3.9491315320837*^9, 3.94913153569973*^9}, {3.949131621363057*^9, 
   3.9491316250306797`*^9}, 3.949131658678965*^9, {3.949131694676167*^9, 
   3.949131719542673*^9}, {3.949131804772492*^9, 3.949131880839612*^9}, {
   3.9491319285081787`*^9, 3.949131935192156*^9}, {3.949159495308094*^9, 
   3.9491595183442173`*^9}, {3.949159576231296*^9, 3.9491597886720867`*^9}, 
   3.949159820767462*^9, {3.94915986776693*^9, 3.9491600064658318`*^9}, {
   3.949160087678788*^9, 3.9491601094505167`*^9}, {3.949160297827173*^9, 
   3.9491603871355352`*^9}, 3.949161223561838*^9, {3.949162225806652*^9, 
   3.9491622283460484`*^9}, {3.949162586709393*^9, 3.949162598503866*^9}, {
   3.949162679616897*^9, 3.9491627260559397`*^9}, 3.949164351987369*^9, {
   3.9491649084221163`*^9, 3.949164971090852*^9}, {3.949200669245473*^9, 
   3.949200684024516*^9}, {3.949200716821397*^9, 3.949200745714573*^9}, 
   3.949200898096113*^9, {3.949201212359705*^9, 3.949201212806198*^9}, {
   3.9492012762366657`*^9, 3.949201276357533*^9}, {3.949201328081294*^9, 
   3.949201345747617*^9}, {3.9492014350398407`*^9, 3.949201466568467*^9}, {
   3.949205959232725*^9, 3.949205960655449*^9}, {3.949205997487422*^9, 
   3.9492060273575077`*^9}, 3.949206081412778*^9, {3.9492061766287193`*^9, 
   3.949206179878314*^9}},ExpressionUUID->"177c6aeb-3217-4232-b287-\
aa0d1de708d1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"A[\"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\"] = \"\>", "\[InvisibleSpace]", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "5"}], " ", 
      RowBox[{"Cos", "[", 
       FractionBox["\[Pi]", "16"], "]"}]}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        FractionBox["\[Pi]", "16"], "]"}], "3"]}], "-", 
     RowBox[{"Cos", "[", 
      FractionBox[
       RowBox[{"3", " ", "\[Pi]"}], "16"], "]"}], "-", 
     RowBox[{"3", " ", 
      RowBox[{"Sin", "[", 
       FractionBox["\[Pi]", "16"], "]"}]}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", 
        FractionBox["\[Pi]", "16"], "]"}], "3"]}], "+", 
     RowBox[{"7", " ", 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "16"], "]"}]}], "-", 
     RowBox[{"8", " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"3", " ", "\[Pi]"}], "16"], "]"}], "3"]}]}], 
    RowBox[{"6", " ", "\[Pi]"}]], "\[InvisibleSpace]", "\<\"  B[\"\>", 
   "\[InvisibleSpace]", "1", "\[InvisibleSpace]", "\<\"] = \"\>", 
   "\[InvisibleSpace]", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "5"}], " ", 
      RowBox[{"Cos", "[", 
       FractionBox["\[Pi]", "16"], "]"}]}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        FractionBox["\[Pi]", "16"], "]"}], "3"]}], "-", 
     RowBox[{"Cos", "[", 
      FractionBox[
       RowBox[{"3", " ", "\[Pi]"}], "16"], "]"}], "-", 
     RowBox[{"3", " ", 
      RowBox[{"Sin", "[", 
       FractionBox["\[Pi]", "16"], "]"}]}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", 
        FractionBox["\[Pi]", "16"], "]"}], "3"]}], "+", 
     RowBox[{"7", " ", 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "16"], "]"}]}], "-", 
     RowBox[{"8", " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"3", " ", "\[Pi]"}], "16"], "]"}], "3"]}]}], 
    RowBox[{"6", " ", "\[Pi]"}]]}],
  SequenceForm[
  "A[", 1, "] = ", Rational[1, 6] 
   Pi^(-1) ((-5) Cos[Rational[1, 16] Pi] + 4 Cos[Rational[1, 16] Pi]^3 - Cos[
    Rational[3, 16] Pi] - 3 Sin[Rational[1, 16] Pi] + 
    4 Sin[Rational[1, 16] Pi]^3 + 7 Sin[Rational[3, 16] Pi] - 8 
    Sin[Rational[3, 16] Pi]^3), "  B[", 1, "] = ", Rational[1, 6] 
   Pi^(-1) ((-5) Cos[Rational[1, 16] Pi] + 4 Cos[Rational[1, 16] Pi]^3 - Cos[
    Rational[3, 16] Pi] - 3 Sin[Rational[1, 16] Pi] + 
    4 Sin[Rational[1, 16] Pi]^3 + 7 Sin[Rational[3, 16] Pi] - 8 
    Sin[Rational[3, 16] Pi]^3)],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9491626000989943`*^9, {3.9491626802653646`*^9, 3.949162726574024*^9}, 
   3.9491643525263643`*^9, {3.949164911061586*^9, 3.9491649818704233`*^9}, {
   3.94920068653172*^9, 3.9492007468100243`*^9}, 3.949201216069027*^9, 
   3.949201277903721*^9, 3.949201331656402*^9, 3.949201388698873*^9, 
   3.9492014405467567`*^9, 3.9492014727990923`*^9, 3.9492059654850683`*^9, 
   3.9492060454935627`*^9, 3.949206196634704*^9, 
   3.949206612795641*^9},ExpressionUUID->"cd42ec50-2404-4ba3-973b-\
a1a567d740f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"0.6366197723675814`", "\[VeryThinSpace]", "+", 
  RowBox[{"Sin", "[", "t", "]"}]}]], "Input",
 CellChangeTimes->{{3.9492007727959023`*^9, 
  3.949200773801906*^9}},ExpressionUUID->"54000481-f36f-4a1f-9d2b-\
da45717e6a4f"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJwVmnk8lG8Xxu0hlUj2ZezGHqVUzkm2iixJG/2iklBJESXtZA1JdkUhSVrJ
9kiRFiJLdrJvMTNmJiLe5/3L53yY+zn3Oee+r+/lGYrbGYfjXBwcHB3cHBz/
/1lwLVNhniJQWW4bqL+0NA3Xqn+rK68VqLTIcdh3tWEaHAU26dsIClR65R6q
L30wDXMx37dlMPgrNa+u2XMUp8HswYLb9g/8lUnfamyuBk1Be4XT44hj/JUK
NTmZdqOTwLMgSJXJWVapEez83jl2DA75nzPYqsVX+brpZazz9n5QUvKIqWJz
VaLqg77Jl/FwODhK3md6iZATiTpxa6SXuLTsEJX2c4m4eiB8YlC/j0iMUV/v
U7lEbLv0w2DwTB/RmPlhp0/sEmH/zKL3wkQfYfZpzs/HYImQYUquGer7RVCF
3b/5XFgkagqexh39OECwH5oEnl1aIO5zfe044TlCiGoK3aSPLBC7X8ye1M0a
IfRet0efbVggao/en//QOUKcrDn/6OzDBeIE+7CJg/Uo0TWe9/3s9gWi/5Q0
D5s6RlQZiKv6hs4TFYEVUozucaK3bFCPcWaekLILibcXnSAWzF9u9t0/T/xI
pWT7W00Q6/fb2PtqzBNBeRU1q15OELlBN4J8v/4l1qdx3T17fZKIrp7+4bvq
L+HuMV4YKz5FeHuvnGWy5oiQiS9nzW2miB2i2rIXuuYIX7dRy/zrUwSPq+eJ
S0/miPFMj7Wxk1NE/7KwyH935ghF/yXOlZRporIg58UV/zmi/u/Wsc17p4n0
vTWtnC5zROhSoaVU2DRxaWFw/sb2OWJp/fOk3LJpYn8WN4WPOkeoXzvoPDw9
TWzYqWhxW3iOGC2f7ufrnibW0NFL8M8scd31uNPTJ9ME4/5/MZHds0RNRann
kt800WAS/Gblx1kiXUwmi9t0mng2lNoRkzdLKDhfvFG8YprwMOhQvndhlni3
fcp2w6MpwqJjdof44VniyJ0WS44zU4TSNfEzSWazBFfAoaWgTVNET73ju7TV
s4RRk3NdTN1vwtHzu0320z/EdnMjmh5jktj28KN/US+b8N54Qaxee4KQsxpI
2VTDJp7xvtvDyxwnFqY435fms4n9TcZqs+/GieItsLwykE0s+7q2S8R8nNBp
e5dRK8omghsNqrX2jxFSq57XtluyCK7USpa/7wjBDEqSWng+Q3Co9dJzLg0Q
1ue+VuonzhAdTidutpoMEI9O/nM/cXWGCA92DO/gHCD2OLm++mE3Q/SMCQod
D+0nXupqWD+hM4jO8TdlcTG/CJ/+4stOBgwi98pms1ijXmLCsq2v8C2N8KlS
/dux7idRraKz++vFCcKq9B7nntASQvaYj/w+7W4i1a264PiObvDh/ZQqXttF
LF/1OqKsoRs+ZstKtbl1EXKty77U7usB77Evaw4kdhIGlDylhWO9UHZaRfAQ
dwdhkXLwfXN5HxwM7GAebm8lNiZ+fXz5Wz8kRJt9cb/VQCROM0fMq4dhXDfF
Uk2hgVD9c0+Mn3sELmUOhH33+04Er0t9GoMj8EXN5EpjXx3xNsvjCaNkBE6u
mznZ8vYLMdqrtHEsfxSyLV2g2+0j4dySwpK5NQ7BtdW5ryYKiEbiTkQm1xS4
Vg2+UZt9Shj8S1YINpwCszLuDyk8T4jD6ibT4u5TIFi4rfuGbBZRmNgQdrN2
CpwOsy3stkYR+zKuLNsQPg17knbeWm7zACzuZznYXqWBT4ZmwH3MAqGMtcZr
79Mg+rGQl5JhNrCucnG+e0aD2hf1dpul8+H9Sw+P2A4ayB3XiH7DfAXnjeut
b6+jQ9zlZweGqgio/aZKO9ZJBzuOO0/2plfCQVWeY03TdGjbZpm98dB7WKp+
VCvFw4Dhj0UZi81VsK3h1ysDLQbwfE2MC6+thou9vx3CLjLA5OfBgMznX2Hl
n48t6atmoFpC1O+W9zc4Nko9cpsyA9YHv5710KiDtoK0bVYGM3Coe7OXTlY9
2J0/eWan0wyUnV2p6/K1AW7VNTs4Js9A+4VpylhFExgWze44LMWEZMoyIweV
Zrjp5CkyQGXCwa9y1qURzTDXa2hkuJkJHXK7/aP2t8Dpj8bTxoeY0FWd/0Wf
0QqiG6ZzWhKZkHrmY2/y/p+wpcC3pziHCc6SXUxu4ieEPMjTP/GWCd3ey+Vb
I9rgAOGWqNzEhB5Rz3MXVTrA9umol5wgC9LLr90eiOgAe/09YU7iLDh8IinN
mtEBG3uzH+9XZkFvSe0nOaIThqQPOJVsZUGfq5rMh/3dsNsnUIx2igX0fb79
vBZ94Kp0oErwIwt+aC16Gwf2QdGZdrfmOha85Az/czq/D2Kl/+m4/2SB79OH
Qm0iv4DvS8norzEWMBYbNuT1/gKPQ+b7jITY8KPJ+X2PCDnHNro1sIYNL3NH
d4la9MPXDafyV8mwwdeBwzUovx96vvje4dVkw8xj3YjdgQOQbGaRZWnBhuaL
pWI38gdgQOJyWZg1G17bWj4o6h0AL9ZwWZwDG87PHX6jYDEIcQprN8y5sMGx
fhz2Bg7C9qy8WKejbDDM8v8Slj8Ia38JJ1/0YAPTOrqXITIE/+6aXF7rS65P
kfJUsxiCO+e9INqfXJ/9mHkocAhQdf3lbxfZEP9V/0pM/hBEO1RoNgaTz3tQ
LlDdOwR1POWYep18nt+O+DmRYbj28eJL7RDyeTtb5HQshmFrQfOFW2FsYM1M
GtzPHwbL4VedoXfY0KfhUHasaxiiaBs6+eLY8O2/IrN1QiNQ71wdtCeeDcX3
ZOqWNo/Ax5StpacS2PDo67W9dV4jIHdnKnZvIhtiOEe6k1NGgH33/oJgMhuC
jKzdPb6OgGOkx5+oFDZ4nHoxtX5+BHJHOK/0pJL5Za29wK05CgfzzscspLEB
2y8tNRwcJefZVGM0nQ1aq36FpoePwvUQF8uHGWyQMLcQ9i4ZhYhP6mNqD9jA
felp4qbxUbD8dGFFEBlPFQpTlkmNgc/76FdpZNwx7PekeccYbMtQ7Iwk4xqZ
Tv3MwDGQmd1/cwcZv3TAkjNPxsBode3zJnL99NuPTbe2j4F9l/9hTTIOrxD8
KigwDkdYXbF2ZD7+zDN72jaOg11G/67tZL5u1JbOxx7jUEb0RXOT+9l9xPjY
uUQybn/gEkvu3zghYxJrxyF9mUvpJFkf1W88fitnx6F8hngqdp8Nq7k8/3Wq
TYBDw+A6oXtsWDD6fuvJvgkw3b1vbwNZ/9FThisvhE4Az11RCbcYch6ykhLM
iiYgQDvk6vsoNlS2L8qJjEzAD4HI+KlwNuSvOpbTu3YSbhzzPTgWyoZE88+6
zywmQaOM3fbiJht8XtxFq+xJOGPNIZt/mQ3OI7O1Yq2TMIr6jO5ANljJHrYf
4P0NK0P3ZXT7sUEhTN0t+PhvYK97+tjiFBuEiKjxXfd+g2kxt0ghOa+zTIav
ZPVviM3KCRoh5/n7kfIbr5Wn4LQQ80LlATaUJCgKXXecgu4jZvJujmzI/hYa
b3tzCq4n6DIad7MheKPD4/GBKbAymrKW2c4GHeGRGoWsaQgY+2PtosEGSQtr
26kf08CVsPTxrCIbuCraJlw4aVC2SrTNUZrs98zW85r6NFh9bseqUPI81/zH
f6smhrynl/slpU2yoOyv8Y5nuTQYvbyvQn2QvB/unVoRX0mDjd3bBW50kvfR
1x/3XGk0iNz48/DjzyzwN0rLXrClg8nEH8jKYoGeyb/lXifo0LL/56WuJBaM
mbmcbQ+mw6Fzu46N3GGBs4PslrfP6DBKqYzxvcQC01NpjWeWM0CiX63miB0L
VmWlLfTXMEDuiOL+F3Qm1D7552rfw4DoIj8j4SEmXC90+USwGMB4KG1p2sYE
drlsXKryDBwpSjiuUEHev21pak7XZ4DLqaToUygTclemO3zeyoSUt9eedokw
wU1sschoL3kPF1lAEDcTpGUOy2Z7MwFPqozQZmYgWkNu9HoKE6YsB2cPNM/A
ebP0y1vmmPBY8GCfzt0Z2HYxPff5axbQjnd+4hKYgY6h9MV7mn+A9l/mKZdW
OjTVP9vBZf4HDurbNalV0uFbUVn86cNkHGnpUf2EDuVhHVTL2D/QsymO61IQ
HR5or903y/4DFvbxpq3ydEhaq5J5THgW5tadOYn8pF4uGfxu0JgF+b5fd66Q
db/RaH/jifMsFNt3fb1M9sXdL+r5wapZ+Jhf9eTqYRr8dzj1b03nLNwtWziX
ZE6D/ZZPzQ1YsyBWAhphWjSw0yuJyVg5B2/nfvDbidJgh+TnzuXqc6SuKLuu
4qOBKVebasC2OVj4FlHlIk8D44nhs4MH52D3rhtnbmykgVY5D3951Bz8ehFf
sMeTBsrZons0cubgefV41b/rNJC9o5h+r3IOukN2qgWn0GClKxqenpmDkBaF
MY5vNKDzBB2RP/AXkictcpZp0mH8d/jTCN+/ILVK646LKR36W5PYfyL+QoMr
bSD0AB2ac4siGyr+QsKtu+P7Q+nw1nqm+JryPHzZtUQZ7qNDULzn6sHpecje
P3kgKIIB/MoHqnJD/oHZj+1f1ctnIKTcMdI1/R/wrf1TG1g3A7z77Jyk3v6D
OE6EjG5yTsItxyOG/sGw+PyyE/9mYGF6vcgZs0Xgt+fAYWMm0EtF3NZzLYGN
fOrGkGdM8Nm7UmtKcgmOmL+krSwl52RKgJ2tvwRbniuIe9YyYZLCGS7hugR1
j+c33e9nwnDo9It5Ygkcvx8r+byGBb81hjl+mXCglMsz/gAfFuSzB46X7+RA
oGdVSpHnwfvDry9JThxY31WH0bdYMO7cHe9wmgOPbQSTEfI8jd5pVv+YxoER
9/9+OFzJghznH1EPnnCgsY6k/S3yPLprNDCC3nDgCU+hv5d+sGCo6mvZ+joO
jNwraN8+wIJ+VpVdzgIHnj1eyOvAw4aHVZVvbvBz4oPiviN/lrPhyJ0KqSNr
OLHW4Ke5tygbetVLBiW0OLFvM93rI4W871lFO1hGnHhxIDIqR50Nh6veFDRu
58TX2r1zB3TZ0HXoRUD4IU7Ue6EXoLWFDSnqz7vdT3BiYBjHaWtTNhxk5Ztu
P8eJh66q+2+2YkN7dK7QQjgn3rWoDAvZw4bW9xkPTpVwYmrJYa/vJ9jwZun8
rNUnTqxMnRH65E3q99addsrNnFjoce7DzbNscHjHXOr4zYn/rtebOJD6rv/n
8763fzlxa/LvSVdS34XXZzyPXcaFtSeuXDci9b2ucMd/VhQu/BHE3GJI6nn+
lFyRkg4XZg5/tT0USeqXFnPlkjEXLgUuqliR+n7S87N7hyUXrlVZLPobS973
uekVbxy5UGpP06Ivqe9qw+fWxrpyof2iDLOQ1Hc+5R2nvU9zYXClcNxrUr+G
XOVqLC9xYdevi02XSX37mDEjq3SbC++6V7wSIvUvq7vWbzGeCxOlWnRcSX28
Lp1e1/6QXD/VdtslUj9dD5xTeVPAhc7H9o4eJPUV71tdjinlQpHvjygcpB7L
t8i2eNVy4TqFuxOeZLwoMqNl2cKFFreFzFPIuMuu9qZiPxfqqcVrx5JxaXRa
178pLvRZYfbYmoyTv/kats9zYc/muvw6cv0AQavI1/zcOPjwgvkaMt5nJTt4
R4wbtaQUzyqQ+WwIYWz2UuTGL8dN1zHI/MU+frprocuN4ypDEWEkrzA50yYo
W8jPNz27NpzEhibw3f7Pihu7ilrFBch6vLxsmdK2l4y79fbQSf2OLZWZeeXG
jfsFlDdl3CX1do6+884ZbtyeU/BdhKy3rdGnTM8gbgyvOC5rHU3qnV/qX/Mw
bpTpPa+xK4INK16ddaAkcKPbqvT5VbfZMEmzyFvI5MYNxZtSk0n9fuJNP/Cq
jBvNrkqe4iT1+3ZezYvoz9zYdPdfYXcAG9xHUwQ8W7lxtOXu+JXzbFA+ZvFO
gcaNJZdve6/1InkpU3r1wgI3tgtuqBN0Z0N/L83jpwAP+rcaOFYfYcODQykS
0Uo8eHqSKhS1lw1Xknx8Turx4KtHcgeTbcnz8dO81mwrD/pp7eM/vYMN0nto
F+adeND9Lb3agzwfCTvNf3qE82AAszr3mTwb/G5L6Zrd50GFLTU/p8VJ3quZ
DpF/xIPxQo3s2VVsEDFN3tBazoPqW37tO7LEgqhN0/e203lwfGGFYAipz7u1
D1X0/+NBX2t1VV3y/K+kfBq+JsiLRjxW9Ie1LIjhzzCqVOJFp4aNzEFSx+J+
7m7f4sSLLd2VJwbCWbDnawlnlxsvpuobvOq6woI1hCr10hle/NAXf/HBeRbc
y168+O42L54euf071IUFiX4FMhtKeZHn/vjddi0W7D8pZd7yiRdP6Y2Oayiw
QNIl5NT5Zl706RDMNxdlkT7gcMXL37yYE5T2u3eWCWmiK4/oKvChh1+YcNZ7
JmS+OJWlfosPcx3/xV7fwYSjj9u/forlQxu3vS+SNjFBOcmc6Z7Oh0FcZQHB
GqQuX5U1f1xExhF3HrzgJ/Xetm6YMs6HO41DW6o+zsCz31pUadtlWLfhs+9b
0v8Va0wWrpDkx79J9UrqU3Qo86uXaFLmR8qlqPfV7XQg3hdeTdTjR5ukpndb
qulQc8DPTsmKHy0c5byLUkiuCVuc3niBHxsdp2oHLejAGBPWPdbCj2+XB89Z
JtBAM2/9s5JYASxWLbASXD8F6dQrT04ILke/RKb82O0ReD+ykUdLfDli85kg
6V0jMPiIcZimtBxb/TlCRFaMgKa8+5rArcvx7JcpCfuYYSgWtbkS7rMcA2bX
51Hih6BxQWrvs9bluNDSUJgWOwA8399yzGQK4Ukn6UChxh7wPDe1L3jzSqz9
t6v6fcEXCByeOyuSIowfaxqK5pWbibInlzeGPhTGEouALTavmolFb86l+Rxh
bOtvb/LY1kLcnOGPHHotjOrit31nnVuJGA6J7OJ6Ybz+SHKtfWwbkS21oeMw
12p8+nmfUc7vLqJ5t6/p05OrsePV50033vQT4iJsfgWf1ahuGbM0+aefONgS
+D3efzU66MocUjEeIPoOXXMOvrEaTzvNU5bKB4gJjxh/+7TV2BO1TN/swyDB
daMg70/DajyUOq9x9cMwoVc0LmK2UQTNLmY/3JIwThxrefc+2UQEVymvP6fU
ME4kztz2oZuJYOugCq1GYIJY0lWrT7cXQVf/oSfbgiaI+tyjYXOeIniUP9iX
7TJJcH1at9HurAgmlanTXt6bJDYMcY5kXxBBzUdm2Wp1k0Qa5YGZ400RbIu5
csdo82/CO7lrqSBNBBueNlv2i04RD4qfFvA+EsE19n/87HdMEc2tF12c80Sw
vjgn4XzwFLFZVLJUoEgEjxu9TW4emSJO64+ePFIugoO3AvyEZaaJTNsiiaIP
Ingv/a7+ou000Xoq5NOKLyJYcP6hddqNaUIwcq//sQYRfH2K0/z322nCJE9Z
pbRVBJey25N+j00TvrUzTau7RfDv7+IQq4FpInu46rrHgAiGym//sLVwmmjn
idMnxkRQ6+CqUwNB04SQkmufGE0EU26v5jXeMU3gNr073mwRHFPkWWEqNk3k
Xq6flOQWRYXkyxc88qeIrpS0FB8BUSzM3/0r9MIUIVzivfPTKlHczZn5+aDp
FHGBLZh7XkYUNxoVaMn+/E1YnLE8+n29KP49PMKr9G+SGDxS2X7TQxSHc0YK
n26eIChmL2um60SR8annVnLICOEfveVee5MoDszVbz1oM0J8a6s5+qFdFNNq
v/GPiJK/P9XJcX9IFI8nJdSffDBMfEng2WzyTxTly2qnKUVDxPkxp+eRWmvQ
Ojgu4VvnAFEbPX9fI2INlvQ2aTzg7SPOtJudPGolhqMf7C/SBr4ThXHV7m/6
16K3WEwjv0gzvH3vX/9idC2qNomY8iY0QzlNbUPBFBk3Xk9skmyBL7vDeXP+
rkX28r6DvxRaYVDQ9lGiiDgSV7Yse6jVBhI32n5dMhVHJZ87gi82dcHVcxPO
ppnimPr63UPx1f0Qkpn60SRXHPXUG+ekbPshqtFGa3OBOBYbmdqzIvshWbdw
3qBEHP9rutSsxT8AryfOJ6v8EMcThiyZxIUBGD26+JOfSwIHj4pfHu0aAlvH
1Xu+u0pg9qZsu28XxsCiZ0XWsxMS6OVKiY8rGAMTD8GZiFMSmMybHkMZGgOt
IO67VoESWB9xsPe+/TgIPmL9eB8jgW+EoyTbSd9cM9Pu8JqQQK5im+odnydh
y91MhyRZSSwccP/Y1TUNhrIZmReUJFHO55scjZe8z3JSGHs1JPGfgN9hW1ka
SJXGx4msl0TnD3zpj3fR4E9/yI8Ia0lUtFtT+DSbBi/XeTkEX5LEQ/Y1T2b2
0kH9h4HD0XZJVHut6aObyIDna1Kl3/dKIp62sE/LZ8CGfTxDcsOSyOfkNthZ
yQDzruYLHQxJvKzM2vNllAFuw35p9kJSqNt9oMN9wwyk/C0aBZBCA7HDyudr
Z0Bxq8LLNHMpDM/1Vm1tn4G8K7cvze+Swua9vr28E+R9z3NgZdF+Kby5taK2
TogJzSv/Guj4SmG25GDzXxsmrFTackXmsRQyfPqOZNcw4d7xR1YXn0rh/uUZ
NxuamSCTKyTS9kIKK7ViB6pJnqdqdz+6WyGFxtGqNasXmWBpFPxFsE0KTfrF
XanrWFAfOHzXo0cKB/d8T8szYYFT2W6XmkEprOtIEGDtZMGxbfK0a3QpTD25
lzHixoKruyrF5gSlUT3iSpVpDAuWRav3Oq2Wxim7Ke3VKSyIbojJfS0ujcWv
nXtyH7Mgba/rZh9lacz9cTrLoIQFJf9xuY5slUYdhhP9VR8LtmV6Us3NpHF2
/+irz2MsqB38MZO5Uxr11ggzcxgsaD2ZFXJ4nzSu62q6W87NhplzZvktPtKY
97VvcacSG1L7T9yr8ZfGls6cCFUqG8zsI4KLgqRxkmOLQaMeySs6P+ySbkuj
0vzRxLtb2WCSxtoUHi2Nc5Qfm55uZ8PIckmlS/HSaAFV5bEk72wc+4/l/EAa
d3Lf3PTVkQ2/9t3oscmWxptEnITcQZK3a7I/meRLY1dTWi78x4bOrN9JCsXS
6LZYXzDlwYabIqtvrK6QxoZ9iauCTrFB65qhN9dHaVyseMT+SfJ/8OFLJoPf
pTF63WX9+UA2qNalq7W0SOPww73nqkje+765Srimk3yeULj4/msk3+YNzb39
JY27FdatLSP5UEFSYCBnRBqvCzedmAplw+dQrW+Jv6VRNfs/3ulwNviybd+E
zUhjtu3G0fIoNnxoSgj1WpJGT43zx2vi2OBtWuLjzCuDCrQy5hLpB9a86D5g
s1wG1wjLvlp2nw3l8pzbTVbL4Ke/kqndJP+6Rytr6YrLYIJwztNrpB9Y+c9S
TEFWBnOfqPTMkPxc5OW1KKwkg/2yx/UMST9wpCN6hFNDBhe/ZmaYkvzNv+Nl
A0OH/Lx8uIY8yeeFRS3vBgxl0DrB8NtnMj6gOpfZbCyD/z5ohJiSfM91Tyay
GmWQw+k/pzAyzuNGv7cWMnhabNOWdDLe43v0cI61DF4avW10jYwX+kIsEx1k
sPdHtNU6Mn5km6cXtl8GLVizZ16Q69tU1ElePCyDDREDBYtkPmwtOpfXMRl8
ONHGJ0XG6SlrJg95yqDflcZAbjJ/S8GNLdY+Mrj7g4FgKbk/WsChiq3+MqgM
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$155184#1"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"t\"", TraditionalForm], 
       FormBox["\"y\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\:0418\:0441\:0445\:043e\:0434\:043d\:0430\:044f \:0444\:0443\:043d\
\:043a\:0446\:0438\:044f\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.949200691880191*^9, 3.949200726094314*^9}, 
   3.9492007579294233`*^9},ExpressionUUID->"79db0fe2-0e0a-4337-97d3-\
6ba3f96bf7f6"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.949200767590684*^9, 
  3.949200768915547*^9}},ExpressionUUID->"04f1dda8-9733-4c0e-927e-\
e58c66be29d6"],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{"",FormBox[
    FormBox[
     TemplateBox[{
      "\"\:0420\:0435\:0430\:043b\:044c\:043d\:044b\:0439 \:0440\:044f\:0434 \
\:0424\:0443\:0440\:044c\:0435\"", 
       "\"\:041a\:043e\:043c\:043f\:043b\:0435\:043a\:0441\:043d\:044b\:0439 \
\:0440\:044f\:0434 \:0424\:0443\:0440\:044c\:0435\"", 
       "\"\:0418\:0441\:0445\:043e\:0434\:043d\:0430\:044f \:0444\:0443\:043d\
\:043a\:0446\:0438\:044f\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    Dashing[{Small, Small}], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    Dashing[{Small, Small}], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Input",
 CellChangeTimes->{{3.949164976995996*^9, 
  3.949164977021636*^9}},ExpressionUUID->"53e13441-ebd9-4943-9ac2-\
5390bff7fac1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"2.`", " ", 
   RowBox[{"Sin", "[", "t", "]"}]}], "-", 
  RowBox[{"1.`", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2.`", " ", "t"}], "]"}]}], "+", 
  RowBox[{"1.6666666666666667`", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"3.`", " ", "t"}], "]"}]}], "-", 
  RowBox[{"0.5`", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"4.`", " ", "t"}], "]"}]}], "+", 
  RowBox[{"0.4`", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"5.`", " ", "t"}], "]"}]}], "-", 
  RowBox[{"0.3333333333333333`", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"6.`", " ", "t"}], "]"}]}], "+", 
  RowBox[{"0.2857142857142857`", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"7.`", " ", "t"}], "]"}]}], "-", 
  RowBox[{"0.25`", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"8.`", " ", "t"}], "]"}]}], "+", 
  RowBox[{"0.2222222222222222`", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"9.`", " ", "t"}], "]"}]}], "-", 
  RowBox[{"0.2`", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"10.`", " ", "t"}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.949162603555995*^9, {3.94916268305203*^9, 3.9491627283228483`*^9}, 
   3.949164353238121*^9, {3.9491649124441967`*^9, 
   3.9491649756215363`*^9}},ExpressionUUID->"40b085b0-8396-417c-a476-\
ec1cc2d9546f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"2.`", " ", 
   RowBox[{"Sin", "[", "t", "]"}]}], "-", 
  RowBox[{"1.`", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2.`", " ", "t"}], "]"}]}], "+", 
  RowBox[{"1.6666666666666667`", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"3.`", " ", "t"}], "]"}]}], "-", 
  RowBox[{"0.5`", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"4.`", " ", "t"}], "]"}]}], "+", 
  RowBox[{"0.4`", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"5.`", " ", "t"}], "]"}]}], "-", 
  RowBox[{"0.3333333333333333`", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"6.`", " ", "t"}], "]"}]}], "+", 
  RowBox[{"0.2857142857142857`", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"7.`", " ", "t"}], "]"}]}], "-", 
  RowBox[{"0.25`", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"8.`", " ", "t"}], "]"}]}], "+", 
  RowBox[{"0.2222222222222222`", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"9.`", " ", "t"}], "]"}]}], "-", 
  RowBox[{"0.2`", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"10.`", " ", "t"}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.949162603555995*^9, {3.94916268305203*^9, 3.9491627283228483`*^9}, 
   3.949164353238121*^9, {3.9491649124441967`*^9, 
   3.949164975624503*^9}},ExpressionUUID->"74abc766-bdb9-4ce8-bf6f-\
0b2afe1277cb"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
f5Wvs60=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$455662#1"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"t\"", TraditionalForm], 
       FormBox["\"y\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\:0418\:0441\:0445\:043e\:0434\:043d\:0430\:044f \:0444\:0443\:043d\
\:043a\:0446\:0438\:044f\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.949162603555995*^9, {3.94916268305203*^9, 3.9491627283228483`*^9}, 
   3.949164353238121*^9, {3.9491649124441967`*^9, 
   3.9491649757128897`*^9}},ExpressionUUID->"7d1382c3-e658-43cb-9ea2-\
100c9ad4ed66"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
eMBmfq/ao174H3NuJYU=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1454007#1"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {2.0000001282282716`, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"t\"", TraditionalForm], 
       FormBox["\"y\"", TraditionalForm]}, 
     AxesOrigin -> {2.0000001282282716`, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\:0418\:0441\:0445\:043e\:0434\:043d\:0430\:044f \:0444\:0443\:043d\
\:043a\:0446\:0438\:044f\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Input",
 CellChangeTimes->{{3.949131947529983*^9, 3.949131950091806*^9}, {
  3.949160124141576*^9, 
  3.949160125170866*^9}},ExpressionUUID->"c793f773-e9de-44fa-ba0a-\
8d32573d32da"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", "2"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"b", "=", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"t0", "=", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"t1", "=", 
   RowBox[{"Pi", "/", "2"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"t2", "=", "Pi"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"T", "=", 
   RowBox[{"t2", "-", "t0"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"h", "=", "3"}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "t_", "]"}], ":=", 
    RowBox[{"Piecewise", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", 
         RowBox[{"0", "\[LessEqual]", 
          RowBox[{"Mod", "[", 
           RowBox[{"t", ",", "T"}], "]"}], "\[LessEqual]", "t1"}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"b", ",", 
         RowBox[{"t1", "<", 
          RowBox[{"Mod", "[", 
           RowBox[{"t", ",", "T"}], "]"}], "\[LessEqual]", "t2"}]}], "}"}]}], 
      "}"}], "]"}]}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"n", "=", "5"}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"A0", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "/", "T"}], ")"}], " ", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{"f", "[", "t", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "T"}], "}"}]}], "]"}]}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "[", "k_", "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", "/", "T"}], ")"}], " ", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", "t", "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", " ", "Pi", " ", "k", " ", "t"}], ")"}], "/", "T"}], 
        "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "T"}], "}"}]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"B", "[", "k_", "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "/", "T"}], ")"}], " ", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", "t", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", " ", "Pi", " ", "k", " ", "t"}], ")"}], "/", "T"}], 
         "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "T"}], "}"}]}], "]"}]}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A0val", "=", 
   RowBox[{"N", "[", "A0", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Avals", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"N", "[", 
      RowBox[{"A", "[", "k", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Bvals", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"N", "[", 
       RowBox[{"B", "[", "k", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fourierSeries", "=", 
    RowBox[{
     RowBox[{"A0val", "/", "2"}], "+", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Avals", "[", 
          RowBox[{"[", "k", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", " ", "Pi", " ", "k", " ", "t"}], ")"}], "/", "T"}], 
          "]"}]}], "+", 
        RowBox[{
         RowBox[{"Bvals", "[", 
          RowBox[{"[", "k", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", " ", "Pi", " ", "k", " ", "t"}], ")"}], "/", "T"}], 
          "]"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "n"}], "}"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"c", "[", "n_", "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "T"}], ")"}], " ", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", "t", "]"}], " ", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "I"}], " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", " ", "Pi", " ", "n", " ", "t"}], ")"}], "/", "T"}]}],
          "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "T"}], "}"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cVals", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"N", "[", 
       RowBox[{"c", "[", "k", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", 
        RowBox[{"-", "n"}], ",", "n"}], "}"}]}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fourierSeriesComplex", "=", 
    RowBox[{
     RowBox[{"A0val", "/", "2"}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Re", "[", 
           RowBox[{"cVals", "[", 
            RowBox[{"[", 
             RowBox[{"k", "+", "n", "+", "1"}], "]"}], "]"}], "]"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"2", " ", "Pi", " ", "k", " ", "t"}], ")"}], "/", "T"}], 
           "]"}]}], "-", 
         RowBox[{
          RowBox[{"Im", "[", 
           RowBox[{"cVals", "[", 
            RowBox[{"[", 
             RowBox[{"k", "+", "n", "+", "1"}], "]"}], "]"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"2", " ", "Pi", " ", "k", " ", "t"}], ")"}], "/", "T"}], 
           "]"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "n"}], "}"}]}], "]"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"fourierSeries", ",", "fourierSeriesComplex", ",", 
     RowBox[{"f", "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"3", "*", "T"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Blue"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Dashed", ",", "Red"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Green"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\:0422\:0440\:0438\:0433\:043e\:043d\:043e\:043c\:0435\:0442\:0440\
\:0438\:0447\:0435\:0441\:043a\:043e\:0435 \:0440\:0430\:0437\:043b\:043e\
\:0436\:0435\:043d\:0438\:0435 (A + B)\>\"", ",", 
      "\"\<\:041a\:043e\:043c\:043f\:043b\:0435\:043a\:0441\:043d\:043e\:0435 \
\:0440\:0430\:0437\:043b\:043e\:0436\:0435\:043d\:0438\:0435 (c_n)\>\"", ",", 
      "\"\<\:041e\:0440\:0438\:0433\:0438\:043d\:0430\:043b\:044c\:043d\:0430\
\:044f \:0444\:0443\:043d\:043a\:0446\:0438\:044f\>\""}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<t\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Exclusions", "\[Rule]", "None"}]}], "]"}], "\n"}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9489611414326*^9, 3.948961141432818*^9}, {
   3.948961213686182*^9, 3.94896123642528*^9}, {3.948961294215701*^9, 
   3.94896131102411*^9}, {3.948961972990728*^9, 3.9489619731390467`*^9}, {
   3.948975964263188*^9, 3.948975982173129*^9}, {3.9489760525*^9, 
   3.9489760647773533`*^9}, {3.94897609778813*^9, 3.9489761550519323`*^9}, 
   3.948976244351482*^9, {3.948976284232482*^9, 3.948976296300519*^9}, {
   3.9489763305739927`*^9, 3.9489763385632267`*^9}, 3.948976375079221*^9, {
   3.948976526648403*^9, 3.948976587168106*^9}, {3.948976728748561*^9, 
   3.948976731832782*^9}, {3.948976789700173*^9, 3.948976849084696*^9}, {
   3.948976896968293*^9, 3.9489768989365473`*^9}, {3.94897713832752*^9, 
   3.9489771512547817`*^9}, {3.948978448489691*^9, 3.948978560231683*^9}, 
   3.948979317600877*^9, 3.948980762316883*^9, {3.949025590851109*^9, 
   3.949025595661481*^9}, {3.9490258413809977`*^9, 3.949025858303254*^9}, 
   3.949026015685053*^9, {3.949026390365315*^9, 3.949026391762582*^9}, {
   3.9490275769612427`*^9, 3.949027601162361*^9}, {3.9490277391767073`*^9, 
   3.949027775857607*^9}, {3.949069375781015*^9, 3.949069421936976*^9}, {
   3.949070656238867*^9, 3.9490706575366898`*^9}, {3.949070777202104*^9, 
   3.949070797938756*^9}, {3.949073219586804*^9, 3.949073220650158*^9}, 
   3.949073313073824*^9},ExpressionUUID->"d5b64a82-8068-4e64-84e7-\
862bedba0eaa"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
8hq5747bcRXSIzS0eS3eXb6VA9/vvJN+NEVDD0mPE0/3EP1zLzD34yy530Pv
cv4ZcCDpvq/1AIeG+r//jfkYc+DVo2dxR/glMdt+2dN/JznA6/b4gIeQJAZP
u1g/siN8//jB0BdRSVTPs5G8dIUDFk8dtyrRJXHVpn/vlzzggOLLUyXTyyXx
RcWayqio/+sZy0uq8pL4sK9M6lQKB0ReHZO0VZREaVWVb2bk/WL7GB0rWyuJ
1xRmG9rKiH4I3Nb7bqskFjDtPOhTHDCMpgvtOSyJCslrGpzIPMiLEU+6ZSqJ
2/ZeEDbZQPxUnNCh5GNkffN3adXNFC5O5PgvOkn2Z/u5N2pT2P6+X6nvoiRK
xuTK1ZH5ZpLeVbrsiiT+OuPA40Tm4beMtiuHr5H1+Ua+fGS+Jn78m5VzSxKX
/eXq6rAn/ie3QPflY0nsPBh22/4R8WNfvgwUPJXEhJZDO3TcKTTP++Q16SmJ
J7QufRn3JPq8IKXW+rUk6t5u5eol/iCtMN7Fz08SvdobDFYFUqhQHLXiZ4Ak
7pkPtFV/S+ZnSZCdRqgkbiyOUysk/sPlh5/ouQhJHJn3f6IdR+HgT+/UkGhJ
DKoNZD8lfsWmzNOkMo7ge816QcTPVJU/meRPksRF151uXiN+Z+/vh8HbUiWx
ubHbivaBwk8Vd/BKuiSeqQgcv/z//4f749QZmSmJS29f3ehF/NTbqmvudZ8k
8UEX0C8Tv7Xy4v6cvzmS+MGm/9oQ8WORPArs6q+kHzqfem8hfk0paE6+Kp/k
p2XUCsTPJWysOVpZJInnBgYaBInfW/8j+dnv75LolNEj4E1wmvWTr+U/JXE0
ZGjw//8ft2nKaqS0XBLf5asr1RGc5aW5+meFJLq+iD/gR/A2JUnzkipJpN++
yi9G8JevvS++/SX9pETn3k7O23U0P7+oXhIt6mqmVpJ4iliB4wVNknhliej7
XBKv7uNrKvmtklj83mRMjORTunS/ZV6HJPIEDLyVJPkafVj16ksX2X8Z2+tb
JuHT/XNFOb2SuHP83af1xD8e6ayeyh6QxDS9CKm9xH/XOiev+zRI6hG2L0yU
+HML+hPrj8OSqJX45eYD4t9b4q18P4yR+n87lhpB/L3NLs2S9ElS7z0Fjg7h
FHbV0ebez0iips0mHibxjwOC+bbJXFLYPrbqXvtrCi+HBvon8kqhtFO6rMUL
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
7RxtOhLxDq9n+HiNUPgb/Q/vK6qe
          "]]}, 
        Annotation[#, "Charting`Private`Tag$914431#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          Dashing[{Small, Small}], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
kch3eD7Dx2uEwkn0P4GZprw=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$914431#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1:eJxN0XlMEwYUBvBSKNApUKAyjoIUtkI5gksZOhLbDsRjdciAcCoIggMzLGYi
h6VuOIpCMUAxKcpEAqkGREaEUA8YiEbrgBLkLMMgNQ5SZNgNpJTWuSx9by95
+fJL3vfXo6fzozOJBAIh78P+m6UelK7xkYtswn/D3W0vadK2dXNMXuoqtXzb
9gQ87ZNrp741BR6b2bggip0HN9dKx88HL4DZs8uVG5Jl8I0m+Q/7w7XgWs+4
3CjBKnjPVX1RpP078Oq2xtKDsnVwHEO5p3QcLQ8xmPda6MAj956yxBT0Irv2
WBINTRxIlfj6mrzCcd3nP7DGQvMOPfSS8NCC+MSSoGNobkEXobEfbVFnf87B
cwNcoVKcXf0d7UArKZiq04MdB+YGBSwDmHqCQ6cPGcHZGYrnm68IXJOJIwqm
OpkIvpQqV93QmoPz350qCj5JAsfccclrIFuBU/6c0lc/R2f7S0t++tkaXJBM
97oyiBZVtPS369Hlk2JmnhUZXOnNrw51RF86cDTC3QVdxf9G994DXXM5rG3+
E5M//Ps+K+2xH7o+Zn1HVBi6SfOAMJOI7uMpOZZy9GzrS+FnTh+BKcJiv/x5
dHiUy8SD21vAVgY3GiXABtw7tLXnS4UtOD7whPxMEAVszL9z8Zcl9LWx7y9M
37UHWz4WmV93cQDndNUJjxeifUlCY8JNtDo2XcibRL+oOyoLVZm8wlG9SBlm
zqInvI+sOc+hR7OSPazVaIU2/uTrBXSfILb30TK6verrlB830Nea9xp3WzqC
BYO72N3u6MS//YQ7PkcP0tqpNlfRnAhW6yKBCo5xbVRa/opOMxPRHSu3gcV7
JwSH453Ar+3ESjL1Y/AXGvkh2Rx6w7WkgsF1Bt//ivdE1oD2ulfuc2YYXc58
VhZhQGeQVKk6axcw++XizjYq2l/51rvMFe3co7NL80TbdhpIkd4mE7ikVrPN
UAZ6s5Gk9WGitVLyAjUALYtiSgXh6CTrA/tfJaEZuecbivr+15/sWaMwXMF3
/aX1jWp0YfUin97hBs46ez2UdIoGPj3w0JYR6I737ocpITq0RDyzNTfBA9ym
TyK3dKPl+eujYRr0o78u1894bAc/68gwu7kLreSzjp+ORkdt//bcHwno0eEr
0qRUdI0s+NPadHSMcLhjKBNNjctiW2WjxwKJv3G/M3mFMynONjAK0SrNSJCN
CP2+pn/fEQ3awX26Pc7XExwpEgxMidBlBTM50W/QkwFvHI0H6eCQqk720xZ0
tWAnoZziBbbwz+kp5qM7tzi5FTejM5d6CwTT6H8AdqLq6Q==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$914431#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0.9058216141326784}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"t\"", TraditionalForm], 
       FormBox["\"y\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0.9058216141326784}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\:0422\:0440\:0438\:0433\:043e\:043d\:043e\:043c\:0435\:0442\:0440\
\:0438\:0447\:0435\:0441\:043a\:043e\:0435 \:0440\:0430\:0437\:043b\:043e\
\:0436\:0435\:043d\:0438\:0435 (A + B)\"", 
       "\"\:041a\:043e\:043c\:043f\:043b\:0435\:043a\:0441\:043d\:043e\:0435 \
\:0440\:0430\:0437\:043b\:043e\:0436\:0435\:043d\:0438\:0435 (c_n)\"", 
       "\"\:041e\:0440\:0438\:0433\:0438\:043d\:0430\:043b\:044c\:043d\:0430\
\:044f \:0444\:0443\:043d\:043a\:0446\:0438\:044f\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    Dashing[{Small, Small}], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    Dashing[{Small, Small}], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.948961148719368*^9, 3.948961149160327*^9}, {
   3.948961214943253*^9, 3.948961237533115*^9}, {3.948961298930871*^9, 
   3.948961315408123*^9}, 3.9489619783210077`*^9, 3.9489760059811983`*^9, {
   3.948976045011351*^9, 3.948976102288198*^9}, 3.9489761592749033`*^9, 
   3.948976249001729*^9, 3.948976301170394*^9, 3.948976379757413*^9, 
   3.948976570292617*^9, 3.948976677488155*^9, 3.9489767339557133`*^9, {
   3.94897681314314*^9, 3.948976850739304*^9}, {3.948976881525457*^9, 
   3.948976900037331*^9}, 3.948977152730118*^9, {3.948978466887601*^9, 
   3.948978540628298*^9}, 3.948978887226851*^9, 3.94897931963733*^9, 
   3.948980762674644*^9, {3.949025573498451*^9, 3.949025596139727*^9}, 
   3.949025858890815*^9, {3.949026008246969*^9, 3.949026017688057*^9}, {
   3.949027506664425*^9, 3.9490275143652687`*^9}, {3.949027580513932*^9, 
   3.949027604853551*^9}, {3.949027742637432*^9, 3.94902777858006*^9}, 
   3.949066917797443*^9, 3.949069344702104*^9, {3.9490693786961317`*^9, 
   3.9490693906987743`*^9}, {3.949070648047358*^9, 3.949070660256825*^9}, 
   3.949070790362475*^9, {3.949073230528565*^9, 3.949073237306079*^9}, 
   3.9490733180570097`*^9, 3.9491306928211718`*^9, 3.9491595102925463`*^9, 
   3.949200696616619*^9, 
   3.949206603952381*^9},ExpressionUUID->"611b72f6-27f4-49c2-a85d-\
c99dd31406fb"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.949069392630012*^9, 
  3.949069393651997*^9}},ExpressionUUID->"620c5027-82a2-4721-a2d8-\
989b20a620a9"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9490276085096827`*^9, 
  3.94902760945442*^9}},ExpressionUUID->"4d7335f6-314e-42dd-9f6c-\
71712aa6fd00"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.948961246397702*^9, 
  3.948961247321208*^9}},ExpressionUUID->"fc01ef23-bc7a-4938-bce9-\
6b872561e283"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.948961158743574*^9, 
  3.948961159824497*^9}},ExpressionUUID->"78102861-898b-46e5-beb6-\
4eb637724107"],

Cell[BoxData[""], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.949025802396907*^9, 
  3.9490258339952517`*^9}},ExpressionUUID->"e7b31f9d-caa7-426a-aeaa-\
7f575c9c6974"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.948978573816658*^9, 3.9489785740171556`*^9}, {
  3.9489792979947443`*^9, 
  3.948979298301734*^9}},ExpressionUUID->"ac60516e-9120-4e68-82cb-\
95d2da7914f2"]
},
WindowSize->{1920, 1011},
WindowMargins->{{0, Automatic}, {0, Automatic}},
Magnification:>1.25 Inherited,
FrontEndVersion->"11.2 for Linux x86 (64-bit) (September 10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 8909, 234, 814, "Input",ExpressionUUID->"177c6aeb-3217-4232-b287-aa0d1de708d1",
 InitializationCell->True],
Cell[9492, 258, 3254, 85, 66, "Print",ExpressionUUID->"cd42ec50-2404-4ba3-973b-a1a567d740f3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12783, 348, 245, 5, 39, InheritFromParent,ExpressionUUID->"54000481-f36f-4a1f-9d2b-da45717e6a4f"],
Cell[13031, 355, 28439, 505, 458, "Output",ExpressionUUID->"79db0fe2-0e0a-4337-97d3-6ba3f96bf7f6"]
}, Open  ]],
Cell[41485, 863, 152, 3, 39, "Input",ExpressionUUID->"04f1dda8-9733-4c0e-927e-e58c66be29d6"],
Cell[CellGroupData[{
Cell[41662, 870, 13211, 271, 110, "Input",ExpressionUUID->"53e13441-ebd9-4943-9ac2-5390bff7fac1"],
Cell[54876, 1143, 1232, 35, 44, "Output",ExpressionUUID->"40b085b0-8396-417c-a476-ec1cc2d9546f"],
Cell[56111, 1180, 1230, 35, 44, "Output",ExpressionUUID->"74abc766-bdb9-4ce8-bf6f-0b2afe1277cb"],
Cell[57344, 1217, 26730, 479, 322, "Output",ExpressionUUID->"7d1382c3-e658-43cb-9ea2-100c9ad4ed66"]
}, Open  ]],
Cell[84089, 1699, 18678, 347, 308, "Input",ExpressionUUID->"c793f773-e9de-44fa-ba0a-8d32573d32da"],
Cell[CellGroupData[{
Cell[102792, 2050, 8807, 252, 988, "Input",ExpressionUUID->"d5b64a82-8068-4e64-84e7-862bedba0eaa",
 InitializationCell->True],
Cell[111602, 2304, 98780, 1693, 313, "Output",ExpressionUUID->"611b72f6-27f4-49c2-a85d-c99dd31406fb"]
}, Open  ]],
Cell[210397, 4000, 152, 3, 60, "Input",ExpressionUUID->"620c5027-82a2-4721-a2d8-989b20a620a9"],
Cell[210552, 4005, 153, 3, 60, "Input",ExpressionUUID->"4d7335f6-314e-42dd-9f6c-71712aa6fd00"],
Cell[210708, 4010, 152, 3, 60, "Input",ExpressionUUID->"fc01ef23-bc7a-4938-bce9-6b872561e283"],
Cell[210863, 4015, 152, 3, 39, "Input",ExpressionUUID->"78102861-898b-46e5-beb6-4eb637724107"],
Cell[211018, 4020, 181, 4, 59, "Input",ExpressionUUID->"e7b31f9d-caa7-426a-aeaa-7f575c9c6974",
 InitializationCell->True],
Cell[211202, 4026, 205, 4, 60, "Input",ExpressionUUID->"ac60516e-9120-4e68-82cb-95d2da7914f2"]
}
]
*)

